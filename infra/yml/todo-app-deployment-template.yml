apiVersion: v1
kind: Template
labels:
  template: todo-app-deployment-config
metadata:
  name: todo-app-deployment-config
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    generation: 1
    labels:
      app: todo-app
    name: todo-app
  spec:
    replicas: 1
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: todo-app
          deploymentconfig: todo-app
      spec:
        containers:
        - imagePullPolicy: Always
          name: todo-app
          from:
            kind: ImageStreamTag
            name: todo-app:latest
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 2Gi
            requests:
              memory: 1Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          securityContext:
            capabilities: {}
            privileged: false
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - imageChangeParams:
        automatic: false
        containerNames:
        - todo-app
        from:
          kind: ImageStreamTag
          name: todo-app:latest
      type: ImageChange
    - type: ConfigChange

- apiVersion: v1
  kind: Service
  metadata:
    name: todo-app
    labels:
      app: todo-app
      deploymentconfig: todo-app
  spec:
    selector:
      app: todo-app
    ports:
    - port: 80
      targetPort: 8080
      name: http
      protocol: TCP

- apiVersion: v1
  kind: Route
  metadata:
    name: todo-app
    labels:
      app: todo-app
  spec:
    host: ${URL}
    to:
      kind: Service
      name: todo-app

parameters:
- name: URL
  displayName: URL
  description: The URL of the app
  required: true
  value: todo-app.192.168.99.101.nip.io